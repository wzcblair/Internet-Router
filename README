I decided to modularize my code based on the different headers; what resulted were separate functions that dealt with handling IP packets, handling ARP packets, sending ARP packets, and sending ICMP messages. In addition, I used a general purpose function to encapsulate any packet with an Ethernet header and send it on the wire. Most fields of the packets were kept in network byte order, which simplified the implementation and made it slightly more efficient. When receiving an ARP packet that is addressed to the router, I decided to cache the ARP entry regardless of whether it is a request or a reply, since in the case of a request we would need to send a reply to the sender anyways (and thus need their MAC address).
